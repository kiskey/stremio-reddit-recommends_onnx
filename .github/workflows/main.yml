name: Process Data, Convert Model, and Publish to GHCR

on:
  schedule:
    - cron: '0 5 * * *'
  workflow_dispatch:

jobs:
  # This job creates the database and the ONNX model and commits them to the repo
  build-assets:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      # --- ADDED: Cache pip dependencies for speed ---
      - name: Cache Pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-build.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Build Dependencies
        run: pip install -r requirements-build.txt

      - name: Create data directory
        run: mkdir -p ./data
      
      # --- ADDED: Cache IMDb datasets for speed ---
      - name: Cache IMDb Datasets
        id: cache-imdb
        uses: actions/cache@v4
        with:
          path: ./data/*.tsv.gz
          key: ${{ runner.os }}-imdb-data-v1

      - name: Download IMDb Datasets if not cached
        if: steps.cache-imdb.outputs.cache-hit != 'true'
        run: |
          echo "Cache not found, downloading IMDb data..."
          wget -q -O ./data/title.basics.tsv.gz https://datasets.imdbws.com/title.basics.tsv.gz
          wget -q -O ./data/title.ratings.tsv.gz https://datasets.imdbws.com/title.ratings.tsv.gz
      
      - name: Build Local IMDb Database
        run: python src/build_imdb_db.py
        
      - name: Convert Model to ONNX format
        run: python src/convert_model_to_onnx.py

      - name: Process Reddit Data to create recommendations.db
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
        run: python src/process_reddit.py
      
      - name: Commit and Push All Assets
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'
          # Add both the database and the new onnx_model directory
          git add -f recommendations.db onnx_model/
          git diff --staged --quiet || git commit -m "Update recommendations database and ONNX model"
          git push

  # This job waits for the assets to be committed, then builds the final image
  build-and-push-docker:
    needs: build-assets
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        # This checkout gets the code AND the freshly committed database and model
        uses: actions/checkout@v4

      # --- REMOVED: No longer need to download artifacts ---
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          # Use GHA cache for faster Docker builds
          cache-from: type=gha
          cache-to: type=gha,mode=max
